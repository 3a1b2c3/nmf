diff --git a/models/grid.py b/fields/grid.py
similarity index 97%
rename from models/grid.py
rename to fields/grid.py
index 97e0017..b0ae41d 100644
--- a/models/grid.py
+++ b/fields/grid.py
@@ -2,9 +2,8 @@ from .tensor_base import TensorBase
 import torch
 import torch.nn.functional as F
 from icecream import ic
-from .convolver import Convolver
-from .grid_sample_Cinf import grid_sample
-from .grid_sample3d import grid_sample_3d
+from models.grid_sample_Cinf import grid_sample
+from models.grid_sample3d import grid_sample_3d
 import random
 import math
 
diff --git a/models/multi_level_rf.py b/fields/multi_level_rf.py
similarity index 100%
rename from models/multi_level_rf.py
rename to fields/multi_level_rf.py
diff --git a/fields/tcnn.py b/fields/tcnn.py
new file mode 100644
index 0000000..2d10864
--- /dev/null
+++ b/fields/tcnn.py
@@ -0,0 +1,62 @@
+import torch
+import tinycudann as tcnn
+class TCNNRF(torch.nn.Module):
+    def __init__(self, aabb, grid_size, *args, **kargs):
+        super().__init__()
+        self.separate_appgrid = False
+        self.register_buffer('aabb', aabb)
+        self.encoding = tcnn.Encoding(3, **kwargs)
+        # The default one
+        # dict(
+        #     otype="HashGrid",
+        #     n_levels=16,
+        #     n_features_per_level=2,
+        #     log2_hashmap_size=14,
+        #     base_resolution=1,
+        #     per_level_scale=2
+        # )
+
+    def set_smoothing(self, sm):
+        pass
+        
+    def set_register(self, name, val):
+        if hasattr(self, name):
+            setattr(self, name, val.type_as(getattr(self, name)))
+        else:
+            self.register_buffer(name, val)
+        
+    def normalize_coord(self, xyz_sampled):
+        coords = (xyz_sampled[..., :3]-self.aabb[0]) * self.invaabbSize - 1
+        size = xyz_sampled[..., 3:4]
+        normed = torch.cat((coords, size), dim=-1)
+        if self.contract_space:
+            r = 1
+            d = 3
+            dist = torch.linalg.norm(normed[..., :d], dim=-1, keepdim=True, ord=2) + 1e-8
+            direction = normed[..., :d] / dist
+            #  contracted = torch.where(dist > 1, (r+1)-r/dist, dist)/2
+            contracted = torch.where(dist > 1, (dist-1)/4+1, dist)/2
+            return torch.cat([ contracted * direction, normed[..., d:] ], dim=-1)
+        else:
+            return normed
+
+    def get_optparam_groups(self, lr_init_spatialxyz = 0.02, lr_init_network = 0.001):
+        raise Exception("Not implemented")
+
+    def init_svd_volume(self, res, device):
+        pass
+
+    def vector_comp_diffs(self):
+        raise Exception("Not implemented")
+
+    def compute_features(self, xyz_sampled):
+        raise Exception("Not implemented")
+
+    def compute_densityfeature(self, xyz_sampled):
+        raise Exception("Not implemented")
+
+    def compute_appfeature(self, xyz_sampled):
+        raise Exception("Not implemented")
+
+    def shrink(self, new_aabb, voxel_size):
+        raise Exception("Not implemented")
diff --git a/configs/model/tensorf.yaml b/configs/model/tensorf.yaml
index a8783a5..98710a8 100644
--- a/configs/model/tensorf.yaml
+++ b/configs/model/tensorf.yaml
@@ -16,7 +16,7 @@ enable_alpha_mask: false
 
 rf:
   _partial_: True
-  _target_: models.tensoRF.TensorVMSplit
+  _target_: fields.tensoRF.TensorVMSplit
   density_n_comp: 16
   # appearance_n_comp: 48
   # app_dim: 48
diff --git a/configs/model/grid_mlp.yaml b/configs/model/grid_mlp.yaml
index 8a7b77a..f05a8e3 100644
--- a/configs/model/grid_mlp.yaml
+++ b/configs/model/grid_mlp.yaml
@@ -22,7 +22,7 @@ arch:
 
   rf:
     _partial_: True
-    _target_: models.grid.Grid
+    _target_: fields.grid.Grid
     app_dim: 24
     step_ratio: 0.5
     density_res_multi: 1
diff --git a/configs/model/refnerf.yaml b/configs/model/refnerf.yaml
index 2e10de7..2d2bee7 100644
--- a/configs/model/refnerf.yaml
+++ b/configs/model/refnerf.yaml
@@ -23,7 +23,7 @@ arch:
 
   rf:
     _partial_: True
-    _target_: models.tensoRF.TensorVMSplit
+    _target_: fields.tensoRF.TensorVMSplit
     density_n_comp: 16
     appearance_n_comp: 24
     app_dim: 24
